<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vLpAAAAAAElFTkSuQmCC
</value>
  </data>
</root>