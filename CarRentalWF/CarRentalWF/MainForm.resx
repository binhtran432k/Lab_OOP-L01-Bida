<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BIKfl1Tq/wG4h+Uscby6QAAAAABJRU5ErkJggg==
</value>
  </data>
</root>